blueprint:
  name: Single Switch Control with Inversion and Toggle
  description: Управление несколькими нагрузками через один выключатель с фильтрацией состояний, инверсией и выбором режима (прямое управление или переключение).
  domain: automation
  input:
    binary_sensor:
      name: Выключатель
      description: Контролируемый бинарный сенсор (выключатель).
      selector:
        entity:
          domain: binary_sensor
    load_entities:
      name: Нагрузки
      description: Список управляемых устройств (light/switch).
      selector:
        entity:
          domain: [light, switch]
          multiple: true
    control_mode:
      name: Режим управления
      description: "Direct" — управление в соответствии с состоянием выключателя, "Toggle" — переключение при каждом изменении.
      default: Direct
      selector:
        select:
          options:
            - Direct
            - Toggle
    invert_control:
      name: Инверсия управления
      description: Включить инверсию в режиме Direct (on → выключить нагрузку, off → включить).
      default: false
      selector:
        boolean: {}

trigger:
  - platform: state
    entity_id: !input binary_sensor

condition:
  - condition: template
    value_template: >
      {{
        trigger.from_state is not none and
        trigger.from_state.state not in ['unavailable', 'unknown'] and
        trigger.to_state.state in ['on', 'off']
      }}

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ control_mode == 'Direct' }}"
        sequence:
          - service: >
              {% if invert_control %}
                {{ 'turn_off' if trigger.to_state.state == 'on' else 'turn_on' }}
              {% else %}
                {{ 'turn_on' if trigger.to_state.state == 'on' else 'turn_off' }}
              {% endif %}
            target:
              entity_id: !input load_entities
            data:
              transition: 0.3
      - conditions:
          - condition: template
            value_template: "{{ control_mode == 'Toggle' }}"
        sequence:
          - service: homeassistant.toggle
            target:
              entity_id: !input load_entities
            data:
              transition: 0.3

variables:
  control_mode: !input control_mode
  invert_control: !input invert_control