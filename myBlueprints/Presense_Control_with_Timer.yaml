blueprint:
  name: Presence Control with Timer
  description: Управление режимом присутствия с таймером. Переключает input_select.presence между "Кто-то дома", "Никого нет" и "Длительное отсутствие" с визуальным отслеживанием через timer.presence_check.<br>ver 0.3b
  domain: automation
  input:
    presence_entity:
      name: Список "Присутствие"
      description: Выберите сущность input_select.presence.
      selector:
        entity:
          domain: input_select
    motion_sensors:
      name: Датчики движения
      description: Выберите датчики движения (binary_sensor) для определения присутствия.
      selector:
        entity:
          multiple: true
          domain: binary_sensor
          device_class: occupancy
    switches:
      name: Выключатели
      description: Выберите выключатели (binary_sensor) для определения активности.
      selector:
        entity:
          multiple: true
          domain: binary_sensor
    door_sensor:
      name: Датчик двери
      description: Выберите датчик двери (binary_sensor), где "off" — закрыта, "on" — открыта.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
    time_of_day_entity:
      name: Список "Время суток"
      description: Выберите сущность input_select.time_of_day для исключения ночи.
      selector:
        entity:
          domain: input_select
    presence_timer:
      name: Таймер присутствия
      description: Выберите сущность timer.presence_check для отслеживания времени отсутствия активности.
      selector:
        entity:
          domain: timer
    no_presence_delay:
      name: Задержка для "Никого нет" (в минутах)
      description: Время в минутах без активности после закрытия двери, после которого включается "Никого нет".
      default: 30
      selector:
        number:
          min: 1
          max: 1440
          unit_of_measurement: minutes
    long_absence_days:
      name: Задержка для "Длительное отсутствие" (в днях)
      description: Количество дней в режиме "Никого нет", после которого включается "Длительное отсутствие".
      default: 7
      selector:
        number:
          min: 1
          max: 365
          unit_of_measurement: days

trigger:
  - platform: state
    entity_id: !input motion_sensors
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input switches
    from: "on"
    to: "off"
  - platform: state
    entity_id: !input switches
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input door_sensor
    to: "off"
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: !input presence_timer
  - platform: state
    entity_id: !input presence_entity
    to: "Никого нет"
    for:
      days: !input long_absence_days

variables:
  presence_entity: !input presence_entity
  motion_sensors: !input motion_sensors
  switches: !input switches
  door_sensor: !input door_sensor
  time_of_day_entity: !input time_of_day_entity
  presence_timer: !input presence_timer
  no_presence_delay: !input no_presence_delay

condition:
  - condition: template
    value_template: >
      {% if trigger.entity_id in motion_sensors or trigger.entity_id in switches %}
        {{ trigger.from_state.state in ['on', 'off'] and trigger.to_state.state in ['on', 'off'] }}
      {% elif trigger.entity_id == door_sensor %}
        {{ states(time_of_day_entity) != 'Ночь' and states(presence_entity) != 'Кто-то дома' }}
      {% elif trigger.event_type == 'timer.finished' %}
        {{ trigger.event_data.entity_id == presence_timer and states(door_sensor) == 'off' }}
      {% elif trigger.entity_id == presence_entity %}
        {{ true }}
      {% else %}
        {{ false }}
      {% endif %}

action:
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ trigger.entity_id in motion_sensors }}"
              - condition: template
                value_template: "{{ trigger.entity_id in switches }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input presence_entity
              option: Кто-то дома
          - service: timer.cancel
            data:
              entity_id: !input presence_timer
      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == door_sensor }}"
        sequence:
          - delay:
              seconds: 60
          - condition: template
            value_template: >
              {{ not is_state(motion_sensors, 'on') and not is_state(switches, 'on') }}
          - service: timer.start
            data:
              entity_id: !input presence_timer
              duration: "{{ '00:' + no_presence_delay|string + ':00' }}"
      - conditions:
          - condition: template
            value_template: "{{ trigger.event_type == 'timer.finished' }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input presence_entity
              option: Никого нет
      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == presence_entity }}"
        sequence:
          - service: input_select.select_option
            data:
              entity_id: !input presence_entity
              option: Длительное отсутствие
